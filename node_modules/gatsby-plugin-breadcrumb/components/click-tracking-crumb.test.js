"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
require("@testing-library/jest-dom/extend-expect");
var _Breadcrumb = _interopRequireDefault(require("./Breadcrumb"));
var _optionsContext = require("./options-context");
var _breadcrumbContext = require("./breadcrumb-context");
var props = {
  title: 'testTitle',
  location: {
    href: 'http://localhost:8000/page-3/',
    origin: 'http://localhost:8000',
    protocol: 'http:',
    host: 'localhost:8000',
    hostname: 'localhost',
    port: '8000',
    pathname: '/page-3/',
    search: '',
    hash: '',
    state: null,
    key: 'initial'
  },
  crumbLabel: 'testLabel',
  crumbSeparator: ' - '
};
var homeProps = {
  title: 'homeTitle',
  location: {
    href: 'http://localhost:8000/',
    origin: 'http://localhost:8000',
    protocol: 'http:',
    host: 'localhost:8000',
    hostname: 'localhost',
    port: '8000',
    pathname: '/',
    search: '',
    hash: '',
    state: null,
    key: 'initial'
  },
  crumbLabel: 'Home',
  crumbSeparator: ' - '
};
var defaultCrumb = {
  location: {
    pathname: '/'
  },
  crumbLabel: 'HomeCustom',
  crumbSeparator: ' / '
};
var useAutoGen = false;
var usePathPrefix = null;
afterEach(function () {
  (0, _react2.cleanup)();
});
describe('Breadcrumb Click Tracking', function () {
  it('Should render click tracking breadcrumb with default crumb', function () {
    var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {
        useAutoGen: useAutoGen,
        usePathPrefix: usePathPrefix
      }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, {
        defaultCrumb: defaultCrumb
      }, /*#__PURE__*/_react.default.createElement(_Breadcrumb.default, {
        title: props.title,
        location: props.location,
        crumbLabel: props.crumbLabel,
        crumbSeparator: props.crumbSeparator
      })))),
      getByText = _render.getByText;
    expect(getByText('testTitle')).toBeTruthy();
    expect(getByText('HomeCustom')).toBeTruthy();
    expect(getByText('testLabel')).toBeTruthy();
  });
  it('should only render one HomeCustom crumb while using defaultCrumb', function () {
    var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {
        useAutoGen: useAutoGen,
        usePathPrefix: usePathPrefix
      }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, {
        defaultCrumb: defaultCrumb
      }, /*#__PURE__*/_react.default.createElement(_Breadcrumb.default, {
        title: homeProps.title,
        location: homeProps.location,
        crumbLabel: homeProps.crumbLabel,
        crumbSeparator: homeProps.crumbSeparator
      })))),
      getByText = _render2.getByText,
      queryByText = _render2.queryByText;
    expect(getByText('homeTitle')).toBeTruthy();
    expect(getByText('HomeCustom')).toBeTruthy();
    expect(queryByText('Home')).toBeNull();
  });
  it('Should Render click tracking breadcrumb without default crumb', function () {
    var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {
        useAutoGen: useAutoGen,
        usePathPrefix: usePathPrefix
      }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, null, /*#__PURE__*/_react.default.createElement(_Breadcrumb.default, {
        title: props.title,
        location: props.location,
        crumbLabel: props.crumbLabel,
        crumbSeparator: props.crumbSeparator
      })))),
      getByText = _render3.getByText,
      queryByText = _render3.queryByText;
    expect(getByText('testTitle')).toBeTruthy();
    expect(queryByText('HomeCustom')).toBeNull();
    expect(getByText('testLabel')).toBeTruthy();
  });
  it('Should render click tracking breadcrumb with default crumb and path prefix', function () {
    var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {
        useAutoGen: useAutoGen,
        usePathPrefix: "/blog"
      }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, {
        defaultCrumb: defaultCrumb
      }, /*#__PURE__*/_react.default.createElement(_Breadcrumb.default, {
        title: props.title,
        location: props.location,
        crumbLabel: props.crumbLabel,
        crumbSeparator: props.crumbSeparator
      })))),
      getByText = _render4.getByText;
    expect(getByText('testTitle')).toBeTruthy();
    expect(getByText('HomeCustom')).toBeTruthy();
    expect(getByText('testLabel')).toBeTruthy();
  });
  it('Should render click tracking breadcrumb with default crumb and using class names', function () {
    var _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_optionsContext.OptionsProvider, {
        useAutoGen: useAutoGen,
        usePathPrefix: usePathPrefix
      }, /*#__PURE__*/_react.default.createElement(_breadcrumbContext.BreadcrumbProvider, {
        defaultCrumb: defaultCrumb
      }, /*#__PURE__*/_react.default.createElement(_Breadcrumb.default, {
        location: props.location,
        crumbLabel: props.crumbLabel,
        crumbSeparator: props.crumbSeparator
      })))),
      container = _render5.container,
      getByText = _render5.getByText,
      queryByText = _render5.queryByText;
    expect(queryByText('testTitle')).toBeNull();
    expect(getByText('HomeCustom')).toBeTruthy();
    expect(getByText('testLabel')).toBeTruthy();
    container.querySelectorAll('a').forEach(function (a) {
      return expect(a.getAttribute('a')).toBeNull();
    });
  });
});