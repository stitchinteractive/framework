"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _gatsby = require("gatsby");
var _optionsContext = require("./options-context");
var _useBreadcrumb2 = _interopRequireDefault(require("./useBreadcrumb"));
var _excluded = ["title", "location", "crumbLabel", "crumbSeparator"];
var ClickTrackingCrumb = function ClickTrackingCrumb(_ref) {
  var title = _ref.title,
    location = _ref.location,
    crumbLabel = _ref.crumbLabel,
    crumbSeparator = _ref.crumbSeparator,
    rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);
  var _React$useContext = _react.default.useContext(_optionsContext.OptionsContext),
    usePathPrefix = _React$useContext.usePathPrefix;
  var _useBreadcrumb = (0, _useBreadcrumb2.default)({
      location: (0, _extends2.default)({}, location, {
        pathname: usePathPrefix ? location.pathname.replace(new RegExp("^" + usePathPrefix), '') : location.pathname
      }),
      crumbLabel: crumbLabel,
      crumbSeparator: crumbSeparator
    }),
    _useBreadcrumb$crumbs = _useBreadcrumb.crumbs,
    crumbs = _useBreadcrumb$crumbs === void 0 ? [] : _useBreadcrumb$crumbs;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, title && /*#__PURE__*/_react.default.createElement("span", {
    className: "breadcrumb__title"
  }, title), /*#__PURE__*/_react.default.createElement("nav", {
    className: "breadcrumb",
    "aria-label": "Breadcrumb"
  }, /*#__PURE__*/_react.default.createElement("ol", {
    className: "breadcrumb__list"
  }, crumbs.map(function (c, i) {
    return /*#__PURE__*/_react.default.createElement("li", {
      className: "breadcrumb__item",
      key: i
    }, /*#__PURE__*/_react.default.createElement(_gatsby.Link, (0, _extends2.default)({
      to: c.pathname || '',
      className: "breadcrumb__link",
      activeClassName: "breadcrumb__link__active",
      "aria-current": i === crumbs.length - 1 ? 'page' : null
    }, rest), c.crumbLabel), i === crumbs.length - 1 ? null : /*#__PURE__*/_react.default.createElement("span", {
      className: "breadcrumb__separator",
      "aria-hidden": "true"
    }, c.crumbSeparator));
  }))));
};
ClickTrackingCrumb.defaultProps = {
  title: '',
  crumbSeparator: ' / '
};
ClickTrackingCrumb.propTypes = {
  location: _propTypes.default.shape().isRequired,
  crumbLabel: _propTypes.default.string.isRequired,
  title: _propTypes.default.string,
  crumbSeparator: _propTypes.default.string
};
var _default = ClickTrackingCrumb;
exports.default = _default;